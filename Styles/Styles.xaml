<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Menu Button Style -->
    <Style
        x:Key="MenuButton"
        TargetType="Button">

        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="110,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>

                        <Image x:Name="ButtonImage" Source="/Assets/Buttons/Menu/ButtonDefault.png" Stretch="Fill"/>

                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Margin="100,0,0,0"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Menu/ButtonHover.png"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Menu/ButtonPress.png "/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize Button -->
    <Style x:Key="MinimizeButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>

                        <Image x:Name="ButtonImage" Source="/Assets/Buttons/Navigation/Minimize1.png" Stretch="Fill"/>

                        <ContentPresenter HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="100,0,0,0"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Navigation/Minimize2.png"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Navigation/Minimize3.png "/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Exit Button -->
    <Style x:Key="ExitButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>

                        <Image x:Name="ButtonImage" Source="/Assets/Buttons/Navigation/Exit1.png" Stretch="Fill"/>

                        <ContentPresenter HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="100,0,0,0"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Navigation/Exit2.png"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Navigation/Exit3.png "/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Check Boxes -->
    <Style x:Key="SavegameCheckBox" TargetType="CheckBox">

        <Setter Property="Height" Value="98"/>
        <Setter Property="Width" Value="98"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>

                        <Image x:Name="SavegameCheckBox" Source="/Assets/Buttons/Savegame/Off.png"/>

                        <ContentPresenter   HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="0,0,00,30"/>


                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Trigger when the CheckBox is checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SavegameCheckBox" Property="Source" Value="/Assets/Buttons/Savegame/On.png"/>
                        </Trigger>

                        <!-- Trigger when the CheckBox is hovered and checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SavegameCheckBox" Property="Source" Value="/Assets/Buttons/Savegame/On_Hover.png"/>
                        </MultiTrigger>

                        <!-- Trigger when the CheckBox is hovered and not checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SavegameCheckBox" Property="Source" Value="/Assets/Buttons/Savegame/Off_Hover.png"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.InitialShowDelay" Value="2000"/>
        <Style.Triggers>
            <!-- Trigger für deaktivierte CheckBox -->
            <Trigger Property="IsEnabled" Value="False">
                <!-- Tooltip wird nur bei deaktivierten CheckBoxen angezeigt -->
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                <Setter Property="ToolTip" Value="Dieses Savegame existiert noch nicht :("/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Text Path Boxes -->
    <Style x:Key="PathBox" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="11,0,11,17.5"/>
    </Style>

    <!-- Text Block (Paths Nr) -->
    <Style x:Key="PathNrText" TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,12,0,0"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <!-- Grid Style Test -->
    <Style x:Key="HoverImageGridStyle" TargetType="Grid">
        <Setter Property="Height" Value="98"/>
        <Setter Property="Width" Value="167"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Assets/Buttons/Paths/PathsDefault.png"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Assets/Buttons/Paths/PathsHover.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Grid Style Overlay Path -->
    <Style x:Key="Overlay Grids" TargetType="Grid">
        <Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Assets/Buttons/Paths/Overlay/OtherPathsDefault.png"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Assets/Buttons/Paths/Overlay/OtherPathsHover.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
   
    <!-- Exit Button (Paths Page) -->
    <Style x:Key="PathBack" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>

                        <Image x:Name="ButtonImage" Source="/Assets/Buttons/Navigation/BackDefault.png" Stretch="Fill"/>

                        <ContentPresenter HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="100,0,0,0"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Navigation/BackHover.png"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Navigation/BackPress.png "/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Overlay TextBox-->
    <Style x:Key="OverlayPathTextBox" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="11 66 54 15"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="650"/>
    </Style>
    
    <!--Overlay Text Blox-->
    <Style x:Key="OverlayPathTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Margin" Value="10 10 0 0"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    
    <!-- Folder path Button -->
    <Style
     x:Key="PathFolderButton"
     TargetType="Button">
        <Setter Property="Panel.ZIndex" Value="10"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="27"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="110,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>

                        <Image x:Name="ButtonImage" Source="/Assets/Buttons/Paths/Overlay/FolderDefault.png" Stretch="Fill"/>

                        <ContentPresenter HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="100,0,0,0"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Paths/Overlay/FolderHover.png"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Assets/Buttons/Paths/Overlay/FolderPress.png "/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Navigation" TargetType="Button">
        <Setter Property="Panel.ZIndex" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#00A8D9"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Exo 2"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border" 
                        BorderBrush="#00A8D9" 
                        BorderThickness="2"
                        CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="0,0.7,0,0"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#00C5FF"/>
                            <Setter Property="Foreground" Value="#00C5FF"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#C2F1FF"/>
                            <Setter Property="Foreground" Value="#C2F1FF"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





</ResourceDictionary>